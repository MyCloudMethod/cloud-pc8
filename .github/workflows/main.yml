name: Windows-RDP-UE5

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: üöÄ Start Setup Log
      run: echo "‚úÖ Mulai setup VM + RustDesk + UE5 CLI + Tools..."

    - name: üõ†Ô∏è Cek & Install Chocolatey (hindari warning)
      shell: powershell
      run: |
        if (!(Get-Command choco -ErrorAction SilentlyContinue)) {
          Set-ExecutionPolicy Bypass -Scope Process -Force
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        } else {
          Write-Output "‚úÖ Chocolatey sudah terinstall, lanjut..."
        }

    - name: üì¶ Install Software
      shell: powershell
      run: |
        $ErrorActionPreference = 'Continue'
        choco install googlechrome -y --no-progress
        choco install vscode -y --no-progress
        choco install obs-studio -y --no-progress
        choco install 7zip -y --no-progress
        choco install git -y --no-progress

    - name: üß† Cek Spesifikasi Hardware
      shell: powershell
      continue-on-error: true
      run: |
        try {
          Write-Output "`nüß† CPU:"
          Get-CimInstance Win32_Processor | Select-Object Name, NumberOfCores, MaxClockSpeed

          Write-Output "`nüìÇ RAM:"
          Get-CimInstance Win32_ComputerSystem | ForEach-Object {
            "Total Physical Memory: {0:N2} GB" -f ($_.TotalPhysicalMemory / 1GB)
          }

          Write-Output "`nüéÆ GPU:"
          Get-CimInstance Win32_VideoController | Select-Object Name, AdapterRAM

          Write-Output "`nüìç SSD:"
          Get-PSDrive -PSProvider 'FileSystem' | Where-Object {$_.Free -gt 0} | ForEach-Object {
            "Drive: $($_.Name), Total: $([math]::Round(($_.Free + $_.Used)/1GB, 2)) GB"
          }

          Write-Output "`nü™ü Windows:"
          (Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion') | Select-Object ProductName, ReleaseId
        } catch {
          Write-Output "‚ùå Gagal cek spesifikasi: $($_.Exception.Message)"
        }

    - name: üéÆ Clone Unreal Engine (opsional)
      if: false # disable step
      shell: powershell
      continue-on-error: true
      run: |
        Write-Output "‚¨áÔ∏è Clone UE5 repo (butuh akses GitHub EpicGames)"
        git clone https://github.com/EpicGames/UnrealEngine.git ue5

    - name: üñ•Ô∏è Install dan Jalankan RustDesk
      shell: powershell
      continue-on-error: true
      run: |
        try {
          $releaseInfo = Invoke-RestMethod -Uri "https://api.github.com/repos/rustdesk/rustdesk/releases/latest" -UseBasicParsing
          $asset = $releaseInfo.assets | Where-Object { $_.name -like '*windows_x64.zip' } | Select-Object -First 1
          if (-not $asset) { throw "ZIP untuk Windows tidak ditemukan." }

          Invoke-WebRequest -Uri $asset.browser_download_url -OutFile "rustdesk.zip" -UseBasicParsing
          Expand-Archive -Path "rustdesk.zip" -DestinationPath rustdesk

          Start-Process -FilePath ".\rustdesk\rustdesk.exe" -ArgumentList "--password ${{ secrets.RUSTDESK_PWD }} --id ${{ secrets.RUSTDESK_ID }}" -NoNewWindow
        } catch {
          Write-Output "‚ùå Gagal install RustDesk: $($_.Exception.Message)"
        }

    - name: üîì Buka Port 8080
      shell: powershell
      run: |
        netsh advfirewall firewall add rule name="Port 8080" dir=in action=allow protocol=TCP localport=8080

    - name: ‚è±Ô∏è Keep Alive 6 Jam
      shell: powershell
      run: |
        for ($i = 0; $i -lt 216; $i++) {
          Write-Output "Menjaga agar VM tetap hidup... ($i/216)"
          Start-Sleep -Seconds 100
        }
